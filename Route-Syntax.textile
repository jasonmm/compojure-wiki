Compojure uses the following syntax for defining routes:

<pre>(http-method route-path bindings & body)</pre>

h3. http-method

A macro that matches a specific HTTP method. The following methods are implemented: @GET@, @POST@, @PUT@, @DELETE@ and @HEAD@. Additionally, the special method @ANY@ will match any HTTP method.

h3. route-path

A string that is used to match the URI using a routing syntax supported by "Clout":http://github.com/weavejester/clout. This may also be a expression that creates a string, or a compiled Clout route. Any parameters defined in the route-path are added to the request.

For example:

<pre>
(GET "/books/:isbn" [isbn]
  (find-book-by-isbn isbn))

(GET (str "/books" "/:isbn") [isbn]
  (find-book-by-isbn isbn))

(GET (clout/route-compile "/books/:isbn" {:isbn #"\d+"}) [isbn]
  (find-book-by-isbn isbn))
</pre>

h3. bindings

A map or vector of bindings that will be applied to the "Ring":http://github.com/mmcgrana/ring request map.

If the binding is a map, it acts like a normal destructuring binding to the whole request map. For example, if you wanted to bind @cookies@ to the request cookies, you'd use the binding: @{cookies :cookies}@. You can read more about destructuring bindings at the "Clojure website":http://clojure.org/special_forms#Special%20Forms--%28let%20%5Bbindings%2A%20%5D%20exprs%2A%29.

If the binding is a vector, the parameters are bound to each symbol in the vector. If a @& more@ form is used, a map of parameters that have not been bound to a symbol are bound to @more@.

h3. body

The body of the route. The return value from this will be used to render the response. See: [[Response Rendering]]